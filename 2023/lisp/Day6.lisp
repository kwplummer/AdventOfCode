(ql:quickload '(:str))
(defpackage :advent (:use :cl))
(in-package :advent)
(defun calc-wins (time distance) (loop for i from 0 to time count (> (* i (- time i)) distance)))
(defun solve (file part-2)
  (if part-2 (setf file (str:replace-all " " "" file)))
    (loop with lines = (str:lines file)
          with time = (frog:extract-numbers (first lines))
          with distance = (frog:extract-numbers (second lines))
          for i from 0 below (length time)
          for win = (calc-wins (nth i time) (nth i distance))
          when (> win 0) collect win into out
          finally (return (reduce #'* out))))
(print (time (solve (frog:get-advent-of-code-input 2023 6) nil)))
(print (time (solve (frog:get-advent-of-code-input 2023 6) t)))
